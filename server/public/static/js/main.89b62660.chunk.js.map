{"version":3,"sources":["service/Auth.service.js","components/pages/Index.js","components/pages/Menu.js","components/auth/Signup.js","components/auth/Login.js","components/ui/Navbar.js","service/Dish.service.js","service/Order.service.js","components/pages/DishDetail.js","components/orders/ReviewCard.js","components/orders/Review.js","components/orders/EditDish.js","components/orders/Preparing.js","components/orders/KitchenCard.js","components/orders/Kitchen.js","components/pages/DishCard.js","components/pages/Category.js","App.js","serviceWorker.js","index.js","final_5dfbcb1a7842900014029781_691688.mp4"],"names":["Services","signup","username","password","_service","post","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Index","Container","className","Row","Col","md","span","offset","Button","as","Link","to","variant","Menu","src","alt","SignupForm","props","handleSubmit","e","preventDefault","state","then","theNewUser","setUser","data","setState","history","push","catch","err","console","log","response","message","handleInputChange","target","name","value","Service","Form","onSubmit","Group","Label","Control","type","onChange","Component","LoginForm","user","theLoggedUser","handleToastOpen","handleToastClose","showToast","toastText","text","Toast","onClose","show","delay","autohide","style","position","right","bottom","minWidth","Header","Body","Navigation","logoutUser","x","saludo","loggedInUser","role","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","onClick","Text","request","id","category","addRequest","newRequest","orderDetail","dishDelete","dishEdit","dishPost","userId","orderReady","DishDetail","componentDidMount","dishId","match","params","_dishService","theDish","dish","newDish","selected","size","ingredients","image","_orderService","changeIngridients","map","ingr","Object","keys","includes","handleSelectChange","qty","DishService","OrderService","elm","idx","key","column","sm","values","i","_id","ReviewCard","eliminateSubmit","Review","updateInfo","theOrder","dishRequested","orderId","order","socket","emit","eliminateId","DishEdit","editDish","Preparing","userActiveOrder","activeOrder","ready","on","autoPlay","loop","muted","sample","KitchenCard","Kitchen","orders","copyOrders","lenght","splice","DishCard","quantity","Category","updateDishes","allCategory","dishes","a","getCategory","App","setTheUser","fetchUser","theLoggedInUserFromTheServer","io","exact","path","component","render","Login","Signup","Edit","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"qPAEqBA,EACjB,aAAc,IAAD,gCAMbC,OAAS,SAACC,EAAUC,GAAX,OAAwB,EAAKC,SAASC,KAAK,eAAgB,CAAEH,WAAUC,cANnE,KAObG,MAAQ,SAACJ,EAAUC,GAAX,OAAwB,EAAKC,SAASC,KAAK,cAAe,CAAEH,WAAUC,cAPjE,KAQbI,OAAS,kBAAM,EAAKH,SAASC,KAAK,iBARrB,KASbG,SAAW,kBAAM,EAAKJ,SAASK,IAAI,mBAR/BC,KAAKN,SAAWO,IAAMC,OAAO,CACzBC,QAAUC,0CACVC,iBAAgB,K,2DCmBbC,EApBD,WACV,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,mBACjB,kBAACC,EAAA,EAAD,CAAKD,UAAU,mBACX,kBAACE,EAAA,EAAD,CAAKF,UAAU,6BACX,sEAGR,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACrB,kBAACC,EAAA,EAAD,CAAQC,GAAIC,IAAMC,GAAG,WAAYC,QAAQ,iBAAiBV,UAAU,cAApE,WAEJ,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACrB,kBAACC,EAAA,EAAD,CAAQC,GAAIC,IAAMC,GAAG,QAAQC,QAAQ,kBAAkBV,UAAU,cAAjE,YC4BLW,EA1CF,WACT,OACI,kBAACZ,EAAA,EAAD,CAAWC,UAAU,gDACjB,oCACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC,IAAD,CAAMH,UAAU,kBAAkBS,GAAG,eACjC,yBAAKG,IAAI,qGAAqGC,IAAI,cAClH,2CAGR,kBAACX,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC,IAAD,CAAMH,UAAU,kBAAkBS,GAAG,cACjC,yBAAKG,IAAI,sGAAqGC,IAAI,cAClH,2CAGR,kBAACX,EAAA,EAAD,CAAKC,GAAG,KACH,kBAAC,IAAD,CAAMH,UAAU,kBAAkBS,GAAG,cAClC,yBAAKG,IAAI,wGAAwGC,IAAI,gBACrH,iDAGR,kBAACX,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC,IAAD,CAAMH,UAAU,kBAAkBS,GAAG,eACjC,yBAAKG,IAAI,oGAAoGC,IAAI,WACjH,yCAGR,kBAACX,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC,IAAD,CAAMH,UAAU,kBAAkBS,GAAG,iBACjC,yBAAKG,IAAI,mGAAmGC,IAAI,WAChH,yCAGR,kBAACX,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAACG,EAAA,EAAD,CAAQN,UAAU,8BAA8BU,QAAQ,iBAAiBH,GAAIC,IAAMC,GAAG,UAAtF,iB,iBCeLK,E,YAhDX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAKVC,aAAe,SAAAC,GACXA,EAAEC,iBADc,MAEe,EAAKC,MAA5BnC,EAFQ,EAERA,SAAUC,EAFF,EAEEA,SAClB,EAAKC,SAASH,OAAOC,EAAUC,GAC1BmC,MAAK,SAAAC,GACF,EAAKN,MAAMO,QAAQD,EAAWE,MAC9B,EAAKC,SAAS,CAAExC,SAAU,GAAIC,SAAU,KACxC,EAAK8B,MAAMU,QAAQC,KAAK,QAE3BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,SAASR,KAAKS,aAfjC,EAmBnBC,kBAAoB,SAAAhB,GAAM,IAAD,EACCA,EAAEiB,OAAlBC,EADe,EACfA,KAAMC,EADS,EACTA,MACZ,EAAKZ,SAAL,eAAiBW,EAAOC,KAnBxB,EAAKlD,SAAW,IAAImD,EACpB,EAAKlB,MAAQ,CAAEnC,SAAU,GAAIC,SAAU,IAHxB,E,sEAyBf,OACI,kBAACc,EAAA,EAAD,CAAWC,UAAU,kBAEjB,wCAEA,kBAACsC,EAAA,EAAD,CAAMC,SAAU/C,KAAKwB,cACjB,kBAACsB,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,gBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOR,KAAK,WAAWS,SAAUpD,KAAKyC,kBAAmBG,MAAO5C,KAAK2B,MAAMnC,YAElG,kBAACsD,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOR,KAAK,WAAWS,SAAUpD,KAAKyC,kBAAmBG,MAAO5C,KAAK2B,MAAMlC,YAElG,kBAACqB,EAAA,EAAD,CAAQI,QAAQ,OAAOiC,KAAK,UAA5B,qB,GAzCKE,a,iBCiFVC,E,YA/EX,WAAY/B,GAAQ,IAAD,8BACf,4CAAMA,KAUVkB,kBAAoB,SAAAhB,GAAM,IAAD,EACCA,EAAEiB,OAAlBC,EADe,EACfA,KAAMC,EADS,EACTA,MACZ,EAAKZ,SAAS,CACVuB,KAAK,eAAM,EAAK5B,MAAM4B,KAAlB,eAAyBZ,EAAOC,OAdzB,EAmBnBpB,aAAe,SAAAC,GACXA,EAAEC,iBADc,MAEe,EAAKC,MAAM4B,KAAlC/D,EAFQ,EAERA,SAAUC,EAFF,EAEEA,SAClB,EAAKC,SAASE,MAAMJ,EAAUC,GACzBmC,MAAK,SAAA4B,GACF,EAAKjC,MAAMO,QAAQ0B,EAAczB,MACjC,EAAKC,SAAS,CAAExC,SAAU,GAAIC,SAAU,KACxC,EAAK8B,MAAMU,QAAQC,KAAK,YAE3BC,OAAM,SAAAC,GACH,EAAKqB,gBAAgBrB,EAAIG,SAASR,KAAKS,aA7BhC,EAiCnBkB,iBAAmB,kBAAM,EAAK1B,SAAS,CAAE2B,WAAW,EAAOC,UAAW,MAjCnD,EAkCnBH,gBAAkB,SAAAI,GAAI,OAAI,EAAK7B,SAAS,CAAE2B,WAAW,EAAMC,UAAWC,KAhClE,EAAKnE,SAAW,IAAImD,EACpB,EAAKlB,MAAQ,CACTgC,WAAW,EACXC,UAAW,GACXL,KAAM,CAAE/D,SAAU,GAAIC,SAAU,KANrB,E,sEAsCf,OACI,kBAACc,EAAA,EAAD,CAAWC,UAAU,kBAEjB,iDAEA,kBAACsC,EAAA,EAAD,CAAMC,SAAU/C,KAAKwB,cACjB,kBAACsB,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,gBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOR,KAAK,WAAWS,SAAUpD,KAAKyC,kBAAmBG,MAAO5C,KAAK2B,MAAMnC,YAElG,kBAACsD,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOR,KAAK,WAAWS,SAAUpD,KAAKyC,kBAAmBG,MAAO5C,KAAK2B,MAAMlC,YAElG,kBAACqB,EAAA,EAAD,CAAQI,QAAQ,OAAOiC,KAAK,UAA5B,sBAGJ,kBAACW,EAAA,EAAD,CACIC,QAAS/D,KAAK0D,iBACdM,KAAMhE,KAAK2B,MAAMgC,UACjBM,MAAO,IACPC,UAAQ,EACRC,MAAO,CACHC,SAAU,QACVC,MAAO,OACPC,OAAQ,OACRC,SAAU,UAEd,kBAACT,EAAA,EAAMU,OAAP,KACI,4BAAQhE,UAAU,WAAlB,SACA,mDAEJ,kBAACsD,EAAA,EAAMW,KAAP,KAAazE,KAAK2B,MAAMiC,iB,GAxEpBP,a,kBCyDTqB,E,YAvDX,WAAYnD,GAAQ,IAAD,8BACf,4CAAMA,KAKVoD,WAAa,WACT,EAAKjF,SAASG,SACT+B,MAAK,SAAAgD,GAAC,OAAI,EAAKrD,MAAMO,SAAQ,MAC7BK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAP9B,EAAK1C,SAAW,IAAImD,EAFL,E,sEAaf,IAAMgC,EAAS7E,KAAKuB,MAAMuD,aAAe9E,KAAKuB,MAAMuD,aAAatF,SAAW,WAE5E,OAEIQ,KAAKuB,MAAMuD,aACwB,YAA/B9E,KAAKuB,MAAMuD,aAAaC,MACxB,kBAACC,EAAA,EAAD,CAAQxE,UAAU,oBAAoBU,QAAQ,OAAO+D,OAAO,MACxD,kBAACD,EAAA,EAAOE,MAAR,sBACA,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,kBAACJ,EAAA,EAAOK,SAAR,KACI,kBAACC,EAAA,EAAD,CAAK9E,UAAU,WACX,kBAAC8E,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,MAAK,kBAAC,IAAD,CAAME,GAAG,KAAT,WAC1C,kBAACqE,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,MAAK,kBAAC,IAAD,CAAME,GAAG,YAAT,WAC1C,kBAACqE,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,MAAK,kBAAC,IAAD,CAAME,GAAG,SAAT,SAC1C,kBAACqE,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,KAAKwE,QAASvF,KAAK2E,YAAxD,WAEJ,kBAACW,EAAA,EAAD,CAAK9E,UAAU,WACX,kBAACwE,EAAA,EAAOQ,KAAR,mBAAyBX,MAOrC,kBAACG,EAAA,EAAD,CAAQxE,UAAU,oBAAoBU,QAAQ,OAAO+D,OAAO,MACxD,kBAACD,EAAA,EAAOE,MAAR,sBACA,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,kBAACJ,EAAA,EAAOK,SAAR,KACI,kBAACC,EAAA,EAAD,CAAK9E,UAAU,WACX,kBAAC8E,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,MAAK,kBAAC,IAAD,CAAME,GAAG,KAAT,WAC1C,kBAACqE,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,MAAK,kBAAC,IAAD,CAAME,GAAG,WAAT,aAC1C,kBAACqE,EAAA,EAAItE,KAAL,CAAUR,UAAU,cAAcO,GAAG,MAAK,kBAAC,IAAD,CAAME,GAAG,UAAT,WAE9C,kBAACqE,EAAA,EAAD,CAAK9E,UAAU,WACX,kBAACwE,EAAA,EAAOQ,KAAR,mBAAyBX,U,GAjD5BxB,aCHJ/D,EACjB,aAAc,IAAD,gCAMbmG,QAAU,SAAAC,GAAE,OAAI,EAAKhG,SAASK,IAAd,gBAA2B2F,KAN9B,KAObC,SAAW,SAAAA,GAAQ,OAAI,EAAKjG,SAASK,IAAd,yBAAoC4F,KANvD3F,KAAKN,SAAUO,IAAMC,OAAO,CACxBC,QAAQC,0CACRC,iBAAgB,KCJPf,EACjB,aAAc,IAAD,gCAObsG,WAAa,SAAAC,GAAU,OAAI,EAAKnG,SAASC,KAAK,SAASkG,IAP1C,KAQbC,YAAc,kBAAM,EAAKpG,SAASK,IAAI,kBARzB,KASbgG,WAAa,SAAAL,GAAE,OAAI,EAAKhG,SAASC,KAAd,wBAAoC+F,KAT1C,KAUbM,SAAW,SAAAN,GAAE,OAAI,EAAKhG,SAASK,IAAd,sBAAiC2F,KAVrC,KAWbO,SAAW,SAACP,EAAGG,GAAJ,OAAmB,EAAKnG,SAASC,KAAd,sBAAkC+F,GAAKG,IAXxD,KAYbK,OAAS,kBAAM,EAAKxG,SAASK,IAAI,gBAZpB,KAaboG,WAAa,kBAAM,EAAKzG,SAASC,KAAK,iBAZlCK,KAAKN,SAAWO,IAAMC,OAAO,CACzBC,QAAQC,0CACRC,iBAAgB,KCiHb+F,E,YAhHX,WAAY7E,GAAO,IAAD,8BACd,4CAAMA,KAWV8E,kBAAoB,WAChB,IAAMC,EAAS,EAAK/E,MAAMgF,MAAMC,OAAOd,GACvC,EAAKe,aAAahB,QAAQa,GACzB1E,MAAK,SAAA8E,GAAO,OAAI,EAAK1E,SAAS,CAAC2E,KAAKD,EAAQ3E,KAAM6E,QAASF,EAAQ3E,KAAM8E,SAASH,EAAQ3E,KAAK+E,UAC/F3E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,kEAAkEF,OAhB9E,EAkBlBZ,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAMmE,EAAa,CACflD,KAAM,EAAKhB,MAAMiF,QAAQjE,KACzBoE,YAAa,EAAKpF,MAAMiF,QAAQG,YAChCpB,SAAU,EAAKhE,MAAMiF,QAAQjB,SAC7BqB,MAAO,EAAKrF,MAAMiF,QAAQI,MAC1BF,KAAM,EAAKnF,MAAMiF,QAAQE,MAG7B,EAAKG,cAAcrB,WAAWC,GAC7BjE,MAAK,SAAAgD,GAAC,OAAI,EAAKrD,MAAMU,QAAQC,KAAK,aAClCC,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAI,oCAAoCF,OA9B/C,EAiClBK,kBAAoB,SAAAhB,GAAM,IAAD,EACJA,EAAEiB,OAAdC,EADgB,EAChBA,KAAKC,EADW,EACXA,MAKNsE,EAFQ,eAAO,EAAKvF,MAAMiF,SAECG,YAAYI,KAAI,SAAAC,GAI1C,OAHGC,OAAOC,KAAKF,GAAM,GAAGG,SAAS5E,KAC9ByE,EAAKzE,GAAQC,GAETwE,KAGZ,EAAKpF,SAAS,CACV4E,QAAQ,eAAI,EAAKjF,MAAMiF,QAAhB,CAAyBG,YAAaG,OA/CnC,EAkDlBM,mBAAqB,SAAA/F,GACjB,EAAKO,SAAS,CACV6E,SAASpF,EAAEiB,OAAOE,MAClBgE,QAAQ,eAAI,EAAKjF,MAAMiF,QAAhB,CAAyBE,KAAMrF,EAAEiB,OAAOE,UAE/CP,QAAQC,IAAI,EAAKX,MAAMiF,UArD3B,EAAKjF,MAAQ,CACTgF,KAAK,GACLC,QAAQ,GACRE,KAAK,CAAC,aAAU,UAAU,UAC1BD,SAAS,GACTY,IAAI,CAAC,MAAM,MAAM,UAErB,EAAKhB,aAAe,IAAIiB,EACxB,EAAKT,cAAgB,IAAIU,EAVX,E,sEA0DT,IAAD,OACJ,OACI,kBAACpH,EAAA,EAAD,CAAWC,UAAU,kBACjB,kBAACC,EAAA,EAAD,CAAKD,UAAU,UACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACzB,4BAAKb,KAAK2B,MAAMgF,KAAKhE,MACrB,yBAAKvB,IAAKpB,KAAK2B,MAAMgF,KAAKK,MAAO3F,IAAI,UAErC,kBAACX,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACzB,kBAACiC,EAAA,EAAD,CAAMC,SAAU/C,KAAKwB,cACjB,kBAACsB,EAAA,EAAKE,MAAN,CAAYjC,GAAIN,KACfT,KAAK2B,MAAMiF,QAAQG,aAChB/G,KAAK2B,MAAMiF,QAAQG,YAAYI,KAAI,SAACS,EAAIC,GAAL,OAC/B,oCACA,kBAAC/E,EAAA,EAAKG,MAAN,CAAY6E,IAAKD,EAAKE,QAAM,EAACC,GAAG,KAC/BX,OAAOC,KAAKM,IAEb,kBAAClH,EAAA,EAAD,CAAKsH,GAAG,KACR,kBAAClF,EAAA,EAAKI,QAAN,CAAcnC,GAAG,SAAS4B,KAAM0E,OAAOC,KAAKM,GAAMxE,SAAU,EAAKX,kBAAmBG,MAAOyE,OAAOY,OAAOL,GAAK,IAC7G,EAAKjG,MAAM8F,IAAIN,KAAI,SAAC1F,EAAEyG,GAAH,OAChBzG,IAAI4F,OAAOY,OAAOL,GAAK,GAAK,4BAAQhF,MAAOnB,EAAGqG,IAAKI,GAAIzG,GAAc,4BAAQmB,MAAOyE,OAAOY,OAAOL,GAAK,IAAKP,OAAOY,OAAOL,GAAK,aAO1I5H,KAAK2B,MAAMiF,QAAQE,MAChB,oCACA,kBAAChE,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnC,GAAG,SAAS6B,MAAO5C,KAAK2B,MAAMkF,SAAUzD,SAAUpD,KAAKwH,oBACpExH,KAAK2B,MAAMmF,KAAKK,KAAI,SAACS,EAAIC,GAAL,OACjBD,IAAM,EAAKjG,MAAMkF,SAAY,4BAAQjE,MAAOgF,EAAKE,IAAKD,GAAMD,GAAgB,4BAAQhF,MAAO,EAAKjB,MAAMkF,SAAUiB,IAAK,EAAKnG,MAAMiF,QAAQuB,KAAM,EAAKxG,MAAMkF,gBAMxK,kBAAC/F,EAAA,EAAD,CAAQI,QAAQ,OAAOV,UAAU,eAAgB2C,KAAK,UAAtD,cAID,kBAAC1C,EAAA,EAAD,CAAKD,UAAU,UACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEE,OAAO,IACd,kBAACC,EAAA,EAAD,CAAQN,UAAU,uBAAuBO,GAAIC,IAAMC,GAAG,SAAtD,kBAEJ,kBAACP,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQN,UAAU,uBAAuBU,QAAQ,iBAAiBH,GAAIC,IAAMC,GAAG,UAA/E,oB,GA1GCoC,aC8BV+E,E,YA/BX,WAAY7G,GAAO,IAAD,8BACd,4CAAMA,KAGVC,aAAe,SAAAC,GACXA,EAAEC,iBACF,EAAKH,MAAM8G,gBAAgB,EAAK9G,MAAM4G,MAJtC,EAAKxG,MAAM,GAFG,E,sEASlB,OACI,kBAACjB,EAAA,EAAD,CAAKF,UAAU,UACX,kBAACC,EAAA,EAAD,KACI,4BAAKT,KAAKuB,MAAMoB,MAChB,yBAAKvB,IAAKpB,KAAKuB,MAAMyF,MAAO3F,IAAI,WAEpC,kBAACZ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,GAAKL,UAAU,iBACpC,kBAACM,EAAA,EAAD,CAAQI,QAAQ,eAAeV,UAAU,eAAeO,GAAIC,IAAMC,GAAE,gBAAWjB,KAAKuB,MAAM4G,MAA1F,WAEJ,kBAACzH,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,GAAKL,UAAU,iBACpC,kBAACM,EAAA,EAAD,CAAQI,QAAQ,UAAUV,UAAU,eAAe+E,QAASvF,KAAKwB,cAAjE,mB,GArBK6B,aC0DViF,E,YAvDX,WAAY/G,GAAO,IAAD,8BACd,4CAAMA,KAUV8E,kBAAoB,kBAAM,EAAKkC,cAXb,EAalBA,WAAW,WACN,EAAKtB,cAAcnB,cACnBlE,MAAK,SAAA4G,GACF,EAAKxG,SAAS,CAACyG,cAAcD,EAASzG,KAAK,GAAG0G,cAAeC,QAAQF,EAASzG,KAAK,GAAGoG,SAEzFhG,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAI,yCAAyCF,OAlBpD,EAuBlBZ,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAIiH,EAAO,EAAKhH,MAAM+G,QACtB,EAAKE,OAAOC,KAAK,kBAAkBF,GACnC,EAAKpH,MAAMU,QAAQC,KAAK,qBA3BV,EA6BlBmG,gBAAkB,SAAA3C,GACd,EAAK1D,SAAS,CAAC8G,YAAYpD,IAC3B,EAAKuB,cAAclB,WAAWL,GAC9B,EAAK6C,cA9BL,EAAK5G,MAAM,CACP8G,cAAc,GACdC,QAAQ,GACRI,YAAY,IAGhB,EAAK7B,cAAgB,IAAIU,EACzB,EAAKiB,OAAO,EAAKrH,MAAMqH,OATT,E,sEAkCT,IAAD,OACJ,OACI,kBAACrI,EAAA,EAAD,CAAWC,UAAU,kBACjB,kBAACE,EAAA,EAAD,CAAKsH,GAAG,MAAK,0CACb,kBAAClF,EAAA,EAAD,CAAMC,SAAU/C,KAAKwB,cACZxB,KAAK2B,MAAM8G,eAAiBzI,KAAK2B,MAAM8G,cAActB,KAAI,SAAAsB,GAAa,OACvE,kBAAC,EAAD,eAAYX,IAAKW,EAAcN,KAAQM,EAAvC,CAAsDJ,gBAAiB,EAAKA,sBAEhF,kBAAC5H,EAAA,EAAD,CAAKD,UAAU,UACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACrB,kBAACC,EAAA,EAAD,CAAQI,QAAQ,SAASV,UAAU,uBAAuB2C,KAAK,UAA/D,cAEJ,kBAACzC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACrB,kBAACC,EAAA,EAAD,CAAQI,QAAQ,kBAAkBH,GAAIC,IAAMR,UAAU,uBAAuBS,GAAG,SAAhF,qB,GAhDPoC,aCoHN0F,E,YAnHX,WAAYxH,GAAO,IAAD,8BACd,4CAAMA,KAUV8E,kBAAoB,WAChB,IAAMC,EAAS,EAAK/E,MAAMgF,MAAMC,OAAOd,GACvC,EAAKuB,cAAcjB,SAASM,GAC3B1E,MAAK,SAAA8E,GAAO,OAAI,EAAK1E,SAAS,CAAEgH,SAAUtC,EAAQ3E,KAAM8E,SAASH,EAAQ3E,KAAK+E,UAC9E3E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,kEAAkEF,OAf9E,EAkBlBZ,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAMmE,EAAa,CACfsC,IAAK,EAAKxG,MAAMqH,SAASb,IACzBxF,KAAM,EAAKhB,MAAMqH,SAASrG,KAC1BoE,YAAa,EAAKpF,MAAMqH,SAASjC,YACjCpB,SAAU,EAAKhE,MAAMqH,SAASrD,SAC9BqB,MAAO,EAAKrF,MAAMqH,SAAShC,MAC3BF,KAAM,EAAKnF,MAAMqH,SAASlC,MAE7B,EAAKG,cAAchB,SAAS,EAAKtE,MAAMqH,SAASb,IAAItC,GACnDjE,MAAK,SAAAgD,GAAC,OAAIvC,QAAQC,IAAI,iCACtBH,OAAM,SAAAC,GAAG,OAAGC,QAAQC,IAAI,qCAAqCF,MAC9D,EAAKb,MAAMU,QAAQC,KAAK,WA/BX,EAkClBO,kBAAoB,SAAAhB,GAAM,IAAD,EACJA,EAAEiB,OAAdC,EADgB,EAChBA,KAAKC,EADW,EACXA,MAKNsE,EAFQ,eAAO,EAAKvF,MAAMqH,UAECjC,YAAYI,KAAI,SAAAC,GAI1C,OAHGC,OAAOC,KAAKF,GAAM,GAAGG,SAAS5E,KAC9ByE,EAAKzE,GAAQC,GAETwE,KAGZ,EAAKpF,SAAS,CACVgH,SAAS,eAAI,EAAKrH,MAAMqH,SAAhB,CAA0BjC,YAAaG,OAhDrC,EAmDlBM,mBAAqB,SAAA/F,GACjB,EAAKO,SAAS,CACV6E,SAASpF,EAAEiB,OAAOE,MAClBoG,SAAS,eAAI,EAAKrH,MAAMqH,SAAhB,CAA0BlC,KAAMrF,EAAEiB,OAAOE,UAEjDP,QAAQC,IAAI,EAAKX,MAAMqH,WAtD3B,EAAKrH,MAAQ,CACTqH,SAAS,GACTlC,KAAK,CAAC,aAAU,UAAU,UAC1BD,SAAS,GACTY,IAAI,CAAC,MAAM,MAAM,UAErB,EAAKR,cAAgB,IAAIU,EARX,E,sEA4DT,IAAD,OACJ,OACI,kBAACpH,EAAA,EAAD,CAAWC,UAAU,kBACjB,kBAACC,EAAA,EAAD,CAAKD,UAAU,UACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACzB,8CACA,4BAAKb,KAAK2B,MAAMqH,SAASrG,MACzB,yBAAKvB,IAAKpB,KAAK2B,MAAMqH,SAAShC,MAAO3F,IAAI,UAEzC,kBAACX,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACzB,kBAACiC,EAAA,EAAD,CAAMC,SAAU/C,KAAKwB,cACjB,kBAACsB,EAAA,EAAKE,MAAN,CAAYjC,GAAIN,KACfT,KAAK2B,MAAMqH,SAASjC,aACjB/G,KAAK2B,MAAMqH,SAASjC,YAAYI,KAAI,SAACS,EAAIC,GAAL,OAChC,oCACA,kBAAC/E,EAAA,EAAKG,MAAN,CAAY6E,IAAKD,EAAKE,QAAM,EAACC,GAAG,KAC/BX,OAAOC,KAAKM,IAEb,kBAAClH,EAAA,EAAD,CAAKsH,GAAG,KACR,kBAAClF,EAAA,EAAKI,QAAN,CAAcnC,GAAG,SAAS4B,KAAM0E,OAAOC,KAAKM,GAAMxE,SAAU,EAAKX,kBAAmBG,MAAOyE,OAAOY,OAAOL,GAAK,IAC7G,EAAKjG,MAAM8F,IAAIN,KAAI,SAAC1F,EAAEyG,GAAH,OAChBzG,IAAI4F,OAAOY,OAAOL,GAAK,GAAK,4BAAQhF,MAAOnB,EAAGqG,IAAKI,EAAE,KAAMzG,GAAc,4BAAQmB,MAAOyE,OAAOY,OAAOL,GAAK,IAAKP,OAAOY,OAAOL,GAAK,aAO9I5H,KAAK2B,MAAMqH,SAASlC,MACjB,oCACA,kBAAChE,EAAA,EAAKG,MAAN,kBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcnC,GAAG,SAAS6B,MAAO5C,KAAK2B,MAAMkF,SAAUzD,SAAUpD,KAAKwH,oBACpExH,KAAK2B,MAAMmF,KAAKK,KAAI,SAACS,EAAIC,GAAL,OACjBD,IAAM,EAAKjG,MAAMkF,SAAY,4BAAQjE,MAAOgF,EAAKE,IAAKD,GAAMD,GAAgB,4BAAQhF,MAAO,EAAKjB,MAAMkF,SAAUiB,IAAK,EAAKnG,MAAMqH,SAASb,KAAM,EAAKxG,MAAMkF,gBAMzK,kBAAC/F,EAAA,EAAD,CAAQI,QAAQ,OAAOV,UAAU,eAAe2C,KAAK,UAArD,iBAID,kBAAC1C,EAAA,EAAD,CAAKD,UAAU,UACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEE,OAAO,IACd,kBAACC,EAAA,EAAD,CAAQN,UAAU,uBAAuBO,GAAIC,IAAMC,GAAG,SAAtD,kBAEJ,kBAACP,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQN,UAAU,uBAAuBU,QAAQ,iBAAiBH,GAAIC,IAAMC,GAAG,UAA/E,oB,GA7GDoC,a,iBC4CR4F,E,YA3CX,WAAY1H,GAAO,IAAD,8BACd,4CAAMA,KASV8E,kBAAmB,WACf,EAAKY,cAAcf,SAClBtE,MAAK,SAAAsH,GAAe,OAAI,EAAKlH,SAAS,CAACmH,YAAYD,EAAgBnH,UACnEI,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,oCAAoCF,OAbhD,EAelBZ,aAAe,SAAAC,GACXA,EAAEC,iBACF,EAAKuF,cAAcd,aAClBvE,MAAK,SAAAgD,GAAC,OAAEvC,QAAQC,IAAI,yBAAyBsC,MAC7CzC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,iCAAiCF,MAC3D,EAAKb,MAAMU,QAAQC,KAAK,UAlBxB,EAAKP,MAAO,CAAEwH,YAAY,EAAK5H,MAAMuD,aAAaqE,YAAcC,OAAM,GACtE,EAAKnC,cAAgB,IAAIU,EACzB,EAAKiB,OAAO,EAAKrH,MAAMqH,OAEvB,EAAKA,OAAOS,GAAG,SAAQ,SAAAlD,GACnB,EAAKxE,MAAMwH,cAAgBhD,GAAc,EAAKnE,SAAS,CAACoH,OAAM,OAPpD,E,sEAyBd,OACIpJ,KAAK2B,MAAMyH,MACX,kBAAC7I,EAAA,EAAD,CAAWC,UAAU,oBACjB,4DACA,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAK,EAAEC,OAAO,IACrB,kBAACC,EAAA,EAAD,CAAQN,UAAU,aAAa+E,QAASvF,KAAKwB,cAA7C,aAIR,yBAAKhB,UAAU,8BACf,wBAAIA,UAAU,UAAd,gCACA,2BAAOA,UAAU,cAAc8I,UAAQ,EAACC,MAAI,EAACC,OAAK,GAC9C,4BAAQpI,IAAKqI,IAAQtG,KAAK,oB,GAtClBE,a,QCMRqG,EATE,SAAC,GAA4B,IAA3B/G,EAA0B,EAA1BA,KAAKmE,EAAqB,EAArBA,KAAKC,EAAgB,EAAhBA,YAC1B,OACI,kBAACrG,EAAA,EAAD,CAAKC,GAAG,KACJ,4BAAKgC,GACL,2BAAImE,GACHC,EAAYI,KAAI,SAACS,EAAIC,GAAL,OAAY,uBAAGC,IAAKD,GAAMR,OAAOC,KAAKM,GAA1B,IAAiCP,OAAOY,OAAOL,SCwCzE+B,E,YAxCX,WAAYpI,GAAO,IAAD,8BACd,4CAAMA,KAYVC,aAAe,SAAAC,GACXA,EAAEC,iBACF,IAAIyE,EAAa,EAAKxE,MAAMiI,OAAO,GAAGzB,IACtC,EAAKS,OAAOC,KAAK,aAAa1C,GAC9B,IAAI0D,EAAU,YAAM,EAAKlI,MAAMiI,QAC/B,GAAuB,IAApBC,EAAWC,OACV,EAAK9H,SAAS,CAAC4H,OAAO,SACpB,CACYC,EAAWE,OAAO,EAAE,GAClC,EAAK/H,SAAS,CAAC4H,OAAOC,MApB1B,EAAKlI,MAAO,CAAEiI,OAAO,IACrB,EAAK3C,cAAgB,IAAIU,EACzB,EAAKiB,OAAO,EAAKrH,MAAMqH,OAGvB,EAAKA,OAAOS,GAAG,aAAY,SAAAV,GAC3B,EAAK3G,SAAS,CAAC4H,OAAO,GAAD,mBAAK,EAAKjI,MAAMiI,QAAhB,CAAwBjB,MAC7CtG,QAAQC,IAAI,EAAKX,MAAMiI,OAAO,OAThB,E,sEA4Bd,OACI5J,KAAK2B,MAAMiI,OAAO,GAClB,oCACA,4BAAK5J,KAAK2B,MAAMiI,OAAO,GAAGrG,KAAK/D,UAC9BQ,KAAK2B,MAAMiI,OAAO,GAAGnB,cAActB,KAAI,SAAAsB,GAAa,OAAE,kBAAC,EAAD,eAAaX,IAAKW,EAAcN,KAAQM,OAC/F,kBAAC3H,EAAA,EAAD,CAAQyE,QAASvF,KAAKwB,cAAtB,UAGA,oD,GArCU6B,aCOP2G,EAVC,SAAC,GAAkD,IAAjD7B,EAAgD,EAAhDA,IAAIxF,EAA4C,EAA5CA,KAAcqE,GAA8B,EAAvCiD,SAAuC,EAA9BjD,OAA8B,EAAxBD,YAAwB,EAAZpB,SAClD,OACI,kBAACjF,EAAA,EAAD,CAAKC,GAAG,KACJ,kBAAC,IAAD,CAAMH,UAAU,kBAAkBS,GAAE,uBAAkBkH,IAClD,yBAAK/G,IAAK4F,EAAO3F,IAAI,SACrB,4BAAKsB,MCuDNuH,E,YAzDX,WAAY3I,GAAQ,IAAD,8BACf,4CAAMA,KAMV8E,kBAAoB,kBAAM,EAAK8D,gBAPZ,EASnBA,aAAe,WACX,IAAMxE,EAAW,EAAKpE,MAAMgF,MAAMC,OAAOb,SACzC,EAAKc,aAAad,SAASA,GAC1B/D,MAAK,SAAAwI,GAAW,OAAI,EAAKpI,SAAS,CAACqI,OAAOD,EAAYrI,WAVvD,EAAK0E,aAAc,IAAIiB,EACvB,EAAK/F,MAAM,CACP0I,OAAO,IAJI,E,yEAcPC,GACR,OAAQA,GACJ,IAAK,QACD,OAAO,yCAEX,IAAK,OACD,OAAO,2CAEX,IAAK,QACD,OAAO,uCAEX,IAAK,OACD,OAAO,+CAEX,IAAK,UACD,OAAO,uCAEX,QACI,OAAO,wD,+BAMf,OADAtK,KAAK2B,MAAM0I,OAAO,IAAMhI,QAAQC,IAAItC,KAAKuB,MAAMgF,MAAMC,OAAOb,UAExD,kBAACpF,EAAA,EAAD,CAAWC,UAAU,kBAChBR,KAAKuK,YAAYvK,KAAKuB,MAAMgF,MAAMC,OAAOb,UAC1C,kBAAClF,EAAA,EAAD,KACKT,KAAK2B,MAAM0I,OAAOlD,KAAI,SAAAR,GAAI,OAAI,kBAAC,EAAD,eAAUmB,IAAKnB,EAAKwB,KAAQxB,QAE/D,kBAAClG,EAAA,EAAD,CAAKD,UAAU,UACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAAEE,OAAO,IACd,kBAACC,EAAA,EAAD,CAAQN,UAAU,uBAAuBO,GAAIC,IAAMC,GAAG,SAAtD,kBAEJ,kBAACP,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQN,UAAU,uBAAuBU,QAAQ,iBAAiBH,GAAIC,IAAMC,GAAG,UAA/E,oB,GAlDDoC,aC0DRmH,E,YA7Cb,aAAe,IAAD,8BACZ,+CAMFC,WAAY,SAAAlH,GACV,EAAKvB,SAAS,CAAE8C,aAAevB,KARnB,EAUdmH,UAAY,WACsB,OAA5B,EAAK/I,MAAMmD,cACb,EAAKpF,SAASI,WACX8B,MAAK,SAAA+I,GAA4B,OAAI,EAAK3I,SAAS,CAAE8C,aAAc6F,EAA6B5I,UAChGI,OAAM,SAAAC,GACL,EAAKJ,SAAS,CAAE8C,cAAc,IAC9BzC,QAAQC,IAAI,CAAEF,YAdpB,EAAKT,MAAQ,CAACmD,aAAa,MAC3B,EAAKpF,SAAW,IAAImD,EACpB,EAAK+F,OAASgC,IAAG,GAAD,OAAIxK,wCAJR,E,sEAsBN,IAAD,OAGP,OAFAJ,KAAK0K,YAGH,oCACA,kBAAC,EAAD,CAAQ5F,aAAc9E,KAAK2B,MAAMmD,aAAchD,QAAS9B,KAAKyK,aAC7D,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWzK,IACjC,kBAAC,IAAD,CAAOwK,KAAK,SAASE,OAAQ,SAAAzE,GAAK,OAAI,kBAAC0E,EAAD,eAAOnJ,QAAS,EAAK2I,YAAelE,OAC1E,kBAAC,IAAD,CAAOuE,KAAK,UAAUE,OAAQ,SAAAzE,GAAK,OAAI,kBAAC2E,EAAD,eAAQpJ,QAAS,EAAK2I,YAAelE,OAC5E,kBAAC,IAAD,CAAOuE,KAAK,WAAWE,OAAQ,kBAAK,kBAAC,EAAD,CAASlG,aAAc,EAAKnD,MAAMmD,aAAc8D,OAAQ,EAAKA,YACjG,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,QAAQC,UAAW5J,IACrC,kBAAC,IAAD,CAAO2J,KAAK,mBAAmBC,UAAW3E,IAC1C,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,SAASE,OAAQ,SAAAzJ,GAAK,OAAG,kBAAC,EAAD,eAAQuD,aAAc,EAAKnD,MAAMmD,aAAc8D,OAAQ,EAAKA,QAAWrH,OAClH,kBAAC,IAAD,CAAOuJ,KAAK,kBAAkBE,OAAQ,SAAAzJ,GAAK,OAAG,kBAAC,EAAD,eAAUuD,aAAc,EAAKnD,MAAMmD,cAAiBvD,OAClG,kBAAC,IAAD,CAAOuJ,KAAK,mBAAmBE,OAAQ,SAAAzJ,GAAK,OAAG,kBAAC,EAAD,eAAWuD,aAAc,EAAKnD,MAAMmD,aAAc8D,OAAQ,EAAKA,QAAWrH,OACzH,kBAAC,IAAD,CAAOuJ,KAAK,YAAYC,UAAWI,U,GAvCrB9H,aCNE+H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShF,MACvB,2D,cCTNiF,IAASR,OACT,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEES,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcxC,MAAMxH,MAAK,SAAAiK,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,mE","file":"static/js/main.89b62660.chunk.js","sourcesContent":["import axios from \"axios\"\n\nexport default class Services{\n    constructor(){\n        this._service = axios.create({\n            baseURL : process.env.REACT_APP_URL,\n            withCredentials:true\n        })\n    }\n    signup = (username, password) => this._service.post('/auth/signup', { username, password })\n    login = (username, password) => this._service.post('/auth/login', { username, password })\n    logout = () => this._service.post('/auth/logout')\n    loggedin = () => this._service.get('/auth/loggedin')\n}","import React from 'react'\nimport {Container,Row,Col,Button} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\"\n\n\nconst Index = () => {\n    return (\n        <Container className=\"background-main\">\n            <Row className=\"buttondown-main\">\n                <Col className=\"center-text push-title-up\">\n                    <h1>Aplicación de Gestion de Comandas</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={{ span:3,offset:2  }}>\n                    <Button as={Link} to='/kitchen'  variant=\"outline-danger\" className=\"big-button\">Cocina</Button>\n                </Col>\n                <Col md={{ span:3,offset:2  }}>\n                    <Button as={Link} to='/menu' variant=\"outline-success\" className=\"big-button\">Mesa</Button>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Index","import React from 'react'\nimport {Link} from \"react-router-dom\"\nimport {Container,Row,Col,Button} from 'react-bootstrap'\n\nconst Menu = () =>{\n    return(\n        <Container className=\"center-text detail push-title background-app\">\n            <h1>Menu</h1>\n            <Row>\n                <Col md=\"4\">\n                    <Link className=\"text-decoration\" to='/menu/first'>\n                        <img src='https://res.cloudinary.com/marvinsequera/image/upload/v1576428727/ironHack2019/Entrante_vpqk2j.jpg' alt='entrantes'/>\n                        <h3>Entrantes</h3>\n                    </Link>\n                </Col>\n                <Col md=\"4\">\n                    <Link className=\"text-decoration\" to='/menu/main'>\n                        <img src='https://res.cloudinary.com/marvinsequera/image/upload/v1576430026/ironHack2019/Principal_oyx0ve.jpg'alt='principal'/>\n                        <h3>Principal</h3>\n                    </Link>\n                </Col>\n                <Col md=\"4\">\n                     <Link className=\"text-decoration\" to='/menu/side'>\n                        <img src='https://res.cloudinary.com/marvinsequera/image/upload/v1576430848/ironHack2019/Acompanante_xyplch.jpg' alt='Aconpanante'/>\n                        <h3>Acompañantes</h3>\n                    </Link>\n                </Col>\n                <Col md=\"4\">\n                    <Link className=\"text-decoration\" to='/menu/drink'>\n                        <img src='https://res.cloudinary.com/marvinsequera/image/upload/v1576431878/ironHack2019/Bebidas_jczvqu.jpg' alt='Bebida'/>\n                        <h3>Bebidas</h3>\n                    </Link>\n                </Col>\n                <Col md=\"4\">\n                    <Link className=\"text-decoration\" to='/menu/dessert'>\n                        <img src='https://res.cloudinary.com/marvinsequera/image/upload/v1576431466/ironHack2019/Postre_dfyxpf.jpg' alt='Postre'/>\n                        <h3>Postres</h3>\n                    </Link>\n                </Col>\n                <Col md=\"4\">\n                    <Button className=\"medium-button margin-center\" variant=\"outline-danger\" as={Link} to=\"/order\">Mi Pedido</Button>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default Menu","import React, { Component } from 'react'\nimport { Button, Form, Container } from 'react-bootstrap'\n\nimport Service from '../../service/Auth.service'\n\nclass SignupForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = { username: '', password: '' }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state\n        this._service.signup(username, password)\n            .then(theNewUser => {\n                this.props.setUser(theNewUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push('/')            // REDIRECCIONAMIENTO\n            })\n            .catch(err => console.log(err.response.data.message))\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    render() {\n        return (\n            <Container className=\"background-app\">\n\n                <h1>Registro</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Contraseña</Form.Label>\n                        <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\n                </Form>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default SignupForm","import React, { Component } from 'react'\nimport { Button, Form, Container, Toast } from 'react-bootstrap'\n\nimport Service from '../../service/Auth.service'\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n        this.state = {\n            showToast: false,\n            toastText: '',\n            user: { username: '', password: '' }\n        }\n    }\n\n\n    handleInputChange = e => {\n        let { name, value } = e.target\n        this.setState({\n            user: { ...this.state.user, [name]: value }\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { username, password } = this.state.user\n        this._service.login(username, password)\n            .then(theLoggedUser => {\n                this.props.setUser(theLoggedUser.data)\n                this.setState({ username: '', password: '' })\n                this.props.history.push('/menu')            // REDIRECCIONAMIENTO\n            })\n            .catch(err => {\n                this.handleToastOpen(err.response.data.message)\n            })\n    }\n\n    handleToastClose = () => this.setState({ showToast: false, toastText: '' })\n    handleToastOpen = text => this.setState({ showToast: true, toastText: text })\n\n\n    render() {\n        return (\n            <Container className=\"background-app\">\n\n                <h1>Iniciar sesión</h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group>\n                        <Form.Label>Usuario</Form.Label>\n                        <Form.Control type=\"text\" name=\"username\" onChange={this.handleInputChange} value={this.state.username} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Contraseña</Form.Label>\n                        <Form.Control type=\"text\" name=\"password\" onChange={this.handleInputChange} value={this.state.password} />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                </Form>\n\n                <Toast\n                    onClose={this.handleToastClose}\n                    show={this.state.showToast}\n                    delay={3000}\n                    autohide\n                    style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '10px',\n                        minWidth: '250px'\n                    }}>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Error</strong>\n                        <small>Session manager</small>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toastText}</Toast.Body>\n                </Toast>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default LoginForm","import React, { Component } from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Service from '../../service/Auth.service'\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this._service = new Service()\n\n    }\n\n    logoutUser = () => {\n        this._service.logout()\n            .then(x => this.props.setUser(false))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const saludo = this.props.loggedInUser ? this.props.loggedInUser.username : 'invitado'\n\n        return (\n\n            this.props.loggedInUser ?\n                this.props.loggedInUser.role===\"Kitchen\" && \n                <Navbar className=\"background-navbar\" variant=\"dark\" expand=\"md\">\n                    <Navbar.Brand>Marvin's Menu</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link className=\"navbar-text\" as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                            <Nav.Link className=\"navbar-text\" as=\"li\"><Link to=\"/kitchen\">Cocina</Link></Nav.Link>\n                            <Nav.Link className=\"navbar-text\" as=\"li\"><Link to=\"/menu\">Menu</Link></Nav.Link>\n                            <Nav.Link className=\"navbar-text\" as=\"li\" onClick={this.logoutUser}>Logout</Nav.Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Navbar.Text>Bienvenid@ {saludo}</Navbar.Text>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n\n                :\n\n                <Navbar className=\"background-navbar\" variant=\"dark\" expand=\"md\">\n                    <Navbar.Brand>Marvin's Menu</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse>\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link className=\"navbar-text\" as=\"li\"><Link to=\"/\">Inicio</Link></Nav.Link>\n                            <Nav.Link className=\"navbar-text\" as=\"li\"><Link to=\"/signup\">Registro</Link></Nav.Link>\n                            <Nav.Link className=\"navbar-text\" as=\"li\"><Link to=\"/login\">Login</Link></Nav.Link>\n                        </Nav>\n                        <Nav className=\"ml-auto\">\n                            <Navbar.Text>Bienvenid@ {saludo}</Navbar.Text>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n        )\n    }\n}\n\nexport default Navigation","import axios from \"axios\"\n\nexport default class Services{\n    constructor(){\n        this._service= axios.create({\n            baseURL:process.env.REACT_APP_URL,\n            withCredentials:true\n        })\n    }\n    request = id => this._service.get(`/menu/${id}`)\n    category = category => this._service.get(`/menu/category/${category}`)\n}","import axios from \"axios\"\n\nexport default class Services{\n    constructor(){\n        this._service = axios.create({\n            baseURL:process.env.REACT_APP_URL,\n            withCredentials:true\n        })\n    }\n\n    addRequest = newRequest => this._service.post('/order',newRequest)\n    orderDetail = () => this._service.get('/order/review')\n    dishDelete = id => this._service.post(`/order/delete/${id}`)\n    dishEdit = id => this._service.get(`/order/edit/${id}`)\n    dishPost = (id,newRequest) => this._service.post(`/order/edit/${id}`,newRequest)\n    userId = () => this._service.get('/order/user')\n    orderReady = () => this._service.post('/order/ready')\n}\n","import React, { Component } from 'react'\nimport DishService from '../../service/Dish.service.js'\nimport OrderService from '../../service/Order.service'\nimport {Container, Row, Col, Form,Button} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\"\n\nclass DishDetail extends Component{\n    constructor(props){\n        super(props)\n        this.state = { \n            dish:{},\n            newDish:{},\n            size:[\"Pequeño\",\"Mediano\",\"Grande\"],\n            selected:\"\",\n            qty:[\"Sin\",\"Con\",\"Extra\"]\n        }\n        this._dishService = new DishService()\n        this._orderService = new OrderService()\n    }\n    componentDidMount = () =>{\n        const dishId = this.props.match.params.id\n        this._dishService.request(dishId)\n        .then(theDish => this.setState({dish:theDish.data, newDish: theDish.data, selected:theDish.data.size}) )\n        .catch(err => console.log(\"error al recuperar la informacion del plato de forma individual\",err))\n    }\n    handleSubmit = e =>{\n        e.preventDefault()\n        const newRequest = {\n            name: this.state.newDish.name,\n            ingredients: this.state.newDish.ingredients,\n            category: this.state.newDish.category,\n            image: this.state.newDish.image,\n            size: this.state.newDish.size\n            }\n        // console.log(newRequest)\n        this._orderService.addRequest(newRequest)\n        .then(x => this.props.history.push('/order'))\n        .catch(err=> console.log(\"error al sumar un plato requerido\",err))\n    }\n\n    handleInputChange = e => {\n        let {name,value}=e.target\n        //console.log(name, value)\n        // console.log(this.state.newDish.ingredients)\n        const ingred = {...this.state.newDish}\n\n        let changeIngridients = ingred.ingredients.map(ingr => {\n             if(Object.keys(ingr)[0].includes(name)) {\n                ingr[name] = value\n             }\n             return ingr\n        })\n\n        this.setState({\n            newDish:{...this.state.newDish, ingredients: changeIngridients}\n        })\n    }\n    handleSelectChange = e =>{\n        this.setState({\n            selected:e.target.value ,\n            newDish:{...this.state.newDish, size: e.target.value},\n            })\n            console.log(this.state.newDish)\n    }\n\n    render(){\n        return(\n            <Container className=\"background-app\">\n                <Row className=\"detail\">\n                    <Col md={{ span:5,offset:1}}>\n                    <h1>{this.state.dish.name}</h1>\n                    <img src={this.state.dish.image} alt=\"dish\"/>\n                    </Col>\n                    <Col md={{ span:3,offset:1}}>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group as={Row}>\n                        {this.state.newDish.ingredients &&\n                            this.state.newDish.ingredients.map((elm,idx) =>(\n                                <>\n                                <Form.Label key={idx} column sm=\"6\">\n                                {Object.keys(elm)}\n                                </Form.Label>\n                                <Col sm=\"6\">\n                                <Form.Control as=\"select\" name={Object.keys(elm)} onChange={this.handleInputChange} value={Object.values(elm)[0]}>\n                                {this.state.qty.map((e,i)=>(\n                                    e!==Object.values(elm)[0] ? <option value={e} key={i}>{e}</option> : <option value={Object.values(elm)[0]}>{Object.values(elm)[0]}</option>\n                                ))}\n                                </Form.Control>\n                                </Col>\n                                </>\n                            ))\n                        }\n                        {this.state.newDish.size && \n                            <>\n                            <Form.Label>Tamaño</Form.Label>\n                            <Form.Control as=\"select\" value={this.state.selected} onChange={this.handleSelectChange}>\n                            {this.state.size.map((elm,idx)=>(\n                                elm!==this.state.selected ?  <option value={elm} key={idx}>{elm}</option> : <option value={this.state.selected} key={this.state.newDish._id}>{this.state.selected}</option>\n                            ))}\n                            </Form.Control>\n                            </>\n                        }\n                        </Form.Group>\n                 <Button variant=\"dark\" className=\"small-button\"  type=\"submit\">Agregar</Button>\n                    </Form>\n                    </Col>\n                </Row>\n                <Row className=\"button\">\n                    <Col md={{ offset:1}}>\n                        <Button className=\"medium-button button\" as={Link} to=\"/menu\">Vuelta a Menu</Button>\n                    </Col>\n                    <Col>\n                        <Button className=\"medium-button button\" variant=\"outline-danger\" as={Link} to=\"/order\">Mi Pedido</Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\nexport default DishDetail","import React, { Component } from 'react'\nimport { Row, Col,Button} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\"\n\nclass ReviewCard extends Component{\n    constructor(props){\n        super(props)\n        this.state={ }\n    }\n    handleSubmit = e =>{\n        e.preventDefault()\n        this.props.eliminateSubmit(this.props._id)\n    }\n    render(){\n    return(\n        <Col className=\"detail\">\n            <Row>\n                <h2>{this.props.name}</h2>\n                <img src={this.props.image} alt=\"plato\"/>\n            </Row>\n            <Row>\n                <Col md={{ span:3,offset:3 }} className=\"button-review\">\n                    <Button variant=\"outline-dark\" className=\"small-button\" as={Link} to={`/edit/${this.props._id}`}>Editar</Button>\n                </Col>\n                <Col md={{ span:3,offset:2 }} className=\"button-review\">\n                    <Button variant=\"warning\" className=\"small-button\" onClick={this.handleSubmit}>Eliminar</Button>\n                </Col>\n            </Row>\n        </Col>\n    )\n}\n}\n\n\n\n\nexport default ReviewCard","import React, { Component } from 'react'\nimport OrderService from '../../service/Order.service'\nimport {Container, Row, Col, Form,Button} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\"\nimport ReviewCard from './ReviewCard'\n\nclass Review extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            dishRequested:[],\n            orderId:'',\n            eliminateId:''\n\n        }\n        this._orderService = new OrderService()\n        this.socket=this.props.socket\n    }\n    componentDidMount = () => this.updateInfo()\n\n    updateInfo=() => {\n         this._orderService.orderDetail()\n        .then(theOrder => {\n            this.setState({dishRequested:theOrder.data[0].dishRequested ,orderId:theOrder.data[0]._id})\n        })\n        .catch(err=> console.log('error al recuperar la orden en la BBDD',err))\n        \n    }\n    // theOrder.data[0]._id aqui esta la id de la orden\n    // theOrder.data[0].dishRequested aqui esta el array de platos pedidos\n    handleSubmit = e =>{\n        e.preventDefault()\n        let order= this.state.orderId\n        this.socket.emit(\"ordersConfirmed\",order)\n        this.props.history.push('/order/preparing')\n    }\n    eliminateSubmit = id =>{\n        this.setState({eliminateId:id})\n        this._orderService.dishDelete(id)\n        this.updateInfo()\n    }\n    render(){\n        return(\n            <Container className=\"background-app\">\n                <Col sm='12'><h1>Tu Pedido</h1></Col>\n                <Form onSubmit={this.handleSubmit}>\n                        {this.state.dishRequested && this.state.dishRequested.map(dishRequested=>    \n                        <ReviewCard key={dishRequested._id}{...dishRequested} eliminateSubmit={this.eliminateSubmit}/>\n                        )}\n                    <Row className=\"button\">\n                        <Col md={{ span:2,offset:2 }}>\n                            <Button variant=\"danger\" className=\"medium-button button\" type=\"submit\">Confirmar</Button>\n                        </Col>\n                        <Col md={{ span:3,offset:3 }}>\n                            <Button variant=\"outline-success\" as={Link} className=\"medium-button button\" to=\"/menu\">Agregar +</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Container>\n        )\n    }\n}\nexport default Review","import React, { Component } from 'react'\nimport OrderService from '../../service/Order.service'\nimport {Container, Row, Col, Form,Button} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\"\n\n\nclass DishEdit extends Component{\n    constructor(props){\n        super(props)\n        this.state = { \n            editDish:{},\n            size:[\"Pequeño\",\"Mediano\",\"Grande\"],\n            selected:\"\",\n            qty:[\"Sin\",\"Con\",\"Extra\"]\n        }\n        this._orderService = new OrderService()\n    }\n    \n    componentDidMount = () =>{\n        const dishId = this.props.match.params.id\n        this._orderService.dishEdit(dishId) //aqui se cambio para el request que busca el plato a editar\n        .then(theDish => this.setState({ editDish: theDish.data, selected:theDish.data.size}) )\n        .catch(err => console.log(\"error al recuperar la informacion del plato de forma individual\",err))\n    }\n\n    handleSubmit = e =>{\n        e.preventDefault()\n        const newRequest = {\n            _id: this.state.editDish._id,\n            name: this.state.editDish.name,\n            ingredients: this.state.editDish.ingredients,\n            category: this.state.editDish.category,\n            image: this.state.editDish.image,\n            size: this.state.editDish.size\n            } \n         this._orderService.dishPost(this.state.editDish._id,newRequest)\n         .then(x => console.log(\"entra ya lo puedes cambiar\"))\n         .catch(err=> console.log(\"error al editar un plato requerido\",err))\n         this.props.history.push('/order')\n    }\n\n    handleInputChange = e => {\n        let {name,value}=e.target\n        //console.log(name, value)\n        // console.log(this.state.editDish.ingredients)\n        const ingred = {...this.state.editDish}\n\n        let changeIngridients = ingred.ingredients.map(ingr => {\n             if(Object.keys(ingr)[0].includes(name)) {\n                ingr[name] = value\n             }\n             return ingr\n        })\n\n        this.setState({\n            editDish:{...this.state.editDish, ingredients: changeIngridients}\n        })\n    }\n    handleSelectChange = e =>{\n        this.setState({\n            selected:e.target.value ,\n            editDish:{...this.state.editDish, size: e.target.value},\n            })\n            console.log(this.state.editDish)\n\n    }\n\n    render(){\n        return(\n            <Container className=\"background-app\">\n                <Row className=\"detail\">\n                    <Col md={{ span:5,offset:1}}>\n                    <h1>Edita tu Plato</h1>\n                    <h2>{this.state.editDish.name}</h2>\n                    <img src={this.state.editDish.image} alt=\"dish\"/>\n                    </Col>\n                    <Col md={{ span:3,offset:1}}>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group as={Row}>\n                        {this.state.editDish.ingredients &&\n                            this.state.editDish.ingredients.map((elm,idx) =>(\n                                <>\n                                <Form.Label key={idx} column sm=\"6\">\n                                {Object.keys(elm)}\n                                </Form.Label>\n                                <Col sm=\"6\">\n                                <Form.Control as=\"select\" name={Object.keys(elm)} onChange={this.handleInputChange} value={Object.values(elm)[0]}>\n                                {this.state.qty.map((e,i)=>(\n                                    e!==Object.values(elm)[0] ? <option value={e} key={i+100}>{e}</option> : <option value={Object.values(elm)[0]}>{Object.values(elm)[0]}</option>\n                                ))}\n                                </Form.Control>\n                                </Col>\n                                </>\n                            ))\n                        }\n                        {this.state.editDish.size && \n                            <>\n                            <Form.Label>Tamaño</Form.Label>\n                            <Form.Control as=\"select\" value={this.state.selected} onChange={this.handleSelectChange}>\n                            {this.state.size.map((elm,idx)=>(\n                                elm!==this.state.selected ?  <option value={elm} key={idx}>{elm}</option> : <option value={this.state.selected} key={this.state.editDish._id}>{this.state.selected}</option>\n                            ))}\n                            </Form.Control>\n                            </>\n                        }\n                        </Form.Group>\n                 <Button variant=\"dark\" className=\"small-button\" type=\"submit\">Actualizar</Button>\n                    </Form>\n                    </Col>\n                </Row>\n                <Row className=\"button\">\n                    <Col md={{ offset:1}}>\n                        <Button className=\"medium-button button\" as={Link} to=\"/menu\">Vuelta a Menu</Button>\n                    </Col>\n                    <Col>\n                        <Button className=\"medium-button button\" variant=\"outline-danger\" as={Link} to=\"/order\">Mi Pedido</Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\nexport default DishEdit","import React, { Component } from 'react'\nimport OrderService from '../../service/Order.service'\nimport {Button, Container, Row, Col} from 'react-bootstrap'\nimport sample from '../../final_5dfbcb1a7842900014029781_691688.mp4'\n\n\nclass Preparing extends Component {\n    constructor(props){\n        super(props)\n        this.state ={ activeOrder:this.props.loggedInUser.activeOrder , ready:false}\n        this._orderService = new OrderService()\n        this.socket=this.props.socket\n\n        this.socket.on('ready',orderReady =>{\n            this.state.activeOrder === orderReady && this.setState({ready:true})\n        })\n    }\n    componentDidMount= () =>{\n        this._orderService.userId()\n        .then(userActiveOrder => this.setState({activeOrder:userActiveOrder.data}))\n        .catch(err => console.log(\"error al recuperar la activeOrder\",err))        \n    }\n    handleSubmit = e =>{\n        e.preventDefault()\n        this._orderService.orderReady()\n        .then(x=>console.log(\"actualizado el usuario\",x))\n        .catch(err => console.log(\"error al actualizar el usuario\",err))\n        this.props.history.push('/menu')\n\n    }\n\n    render(){\n        return(\n            this.state.ready ?\n            <Container className=\"background-ready\">\n                <h1>Tenemos listo vuestro pedido</h1>\n                <Col md={{ span:6,offset:4}}>\n                    <Button className=\"big-button\" onClick={this.handleSubmit}>Recoger</Button>\n                </Col>\n            </Container>\n            :\n            <div className=\"background-app center-text\">\n            <h1 className=\"button\">Estamos Preparando tu pedido</h1>\n            <video className=\"videoPlayer\" autoPlay loop muted>\n                <source src={sample} type=\"video/mp4\"/>\n            </video>\n            </div>\n        )\n    }\n}\nexport default Preparing","import React from 'react'\nimport Col from 'react-bootstrap/Col'\n\nconst KitchenCard=({name,size,ingredients}) =>{\n    return(\n        <Col md=\"4\">\n            <h5>{name}</h5>\n            <p>{size}</p>\n            {ingredients.map((elm,idx)=> <p key={idx}>{Object.keys(elm)}:{Object.values(elm)}</p>)}\n        </Col>\n    )\n}\n export default KitchenCard","import React, { Component } from 'react'\nimport OrderService from '../../service/Order.service'\nimport {Button} from 'react-bootstrap'\nimport KitchenCard from './KitchenCard'\n\n\n\nclass Kitchen extends Component {\n    constructor(props){\n        super(props)\n        this.state ={ orders:[] }\n        this._orderService = new OrderService()\n        this.socket=this.props.socket    \n        //console.log(this.socket)\n\n        this.socket.on('confirmed',order=>{\n        this.setState({orders:[...this.state.orders, order]})\n        console.log(this.state.orders[0])\n    })\n\n    }\n    handleSubmit = e => {\n        e.preventDefault()\n        let orderReady = this.state.orders[0]._id\n        this.socket.emit(\"orderReady\",orderReady)\n        let copyOrders =[...this.state.orders]\n        if(copyOrders.lenght===0){\n            this.setState({orders:[]})\n        }else {\n            let removed = copyOrders.splice(0,1)\n            this.setState({orders:copyOrders})\n        }\n    }\n\n    render(){\n        \n        return(\n            this.state.orders[0] ?\n            <>\n            <h3>{this.state.orders[0].user.username}</h3>\n            {this.state.orders[0].dishRequested.map(dishRequested=><KitchenCard key={dishRequested._id}{...dishRequested}/>)}\n            <Button onClick={this.handleSubmit}>Listo</Button>\n            </>\n            :\n            <h1>Esperando Pedido</h1>\n        )\n    }\n}\nexport default Kitchen","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport {Link} from \"react-router-dom\"\n\nconst DishCard =({_id,name,quantity,image,ingredients,category})=>{\n    return (\n        <Col md=\"4\">\n            <Link className=\"text-decoration\" to={`/menu/detail/${_id}`}>\n                <img src={image} alt=\"dish\"/>\n                <h3>{name}</h3>\n            </Link>\n        </Col>\n    )\n}\nexport default DishCard","import React, { Component } from 'react'\nimport {Container , Row ,Col, Button} from \"react-bootstrap\"\nimport DishService from '../../service/Dish.service'\nimport DishCard from './DishCard'\nimport {Link} from \"react-router-dom\"\n\nclass Category extends Component {\n    constructor(props) {\n        super(props)\n        this._dishService= new DishService()\n        this.state={\n            dishes:[]\n        }\n    }\n    componentDidMount = () => this.updateDishes()\n\n    updateDishes = () =>{\n        const category = this.props.match.params.category\n        this._dishService.category(category)\n        .then(allCategory => this.setState({dishes:allCategory.data}))\n    }\n    getCategory(a){\n        switch (a) {\n            case \"first\":\n                return <h1>Entrantes</h1>\n                break;\n            case \"main\":\n                return <h1>Principales</h1>\n                break;\n            case \"drink\":\n                return <h1>Bebidas</h1>\n                break;\n            case \"side\":\n                return <h1>Acompañantes</h1>\n                break;\n            case \"dessert\":\n                return <h1>Postres</h1>\n                break;\n            default:\n                return <h1>No entro en otro lado</h1>\n                break;\n        }\n    }\n    render(){\n        this.state.dishes[0] && console.log(this.props.match.params.category)\n        return(\n            <Container className=\"background-app\">\n                {this.getCategory(this.props.match.params.category)}\n                <Row>\n                    {this.state.dishes.map(dish => <DishCard key={dish._id}{...dish}/>)}\n                </Row>\n                <Row className=\"button\">\n                    <Col md={{ offset:1}}>\n                        <Button className=\"medium-button button\" as={Link} to=\"/menu\">Vuelta a Menu</Button>\n                    </Col>\n                    <Col>\n                        <Button className=\"medium-button button\" variant=\"outline-danger\" as={Link} to=\"/order\">Mi Pedido</Button>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Category","import React, { Component } from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Service from './service/Auth.service'\nimport io from 'socket.io-client'\n\n\nimport Index from './components/pages/Index'\nimport Menu from './components/pages/Menu';\nimport Signup from './components/auth/Signup'\nimport Login from './components/auth/Login'\nimport Navbar from './components/ui/Navbar'\nimport DishDetail from './components/pages/DishDetail'\nimport Review from './components/orders/Review'\nimport Edit from './components/orders/EditDish'\nimport Preparing from './components/orders/Preparing'\nimport Kitchen from './components/orders/Kitchen'\nimport Category from './components/pages/Category'\n\nclass App extends Component {\n  constructor (){\n    super()\n    this.state = {loggedInUser:null}\n    this._service = new Service()\n    this.socket = io(`${process.env.REACT_APP_URL_SOCKET}`)\n\n  }\n  setTheUser =user => {\n    this.setState({ loggedInUser : user})\n  }\n  fetchUser = () =>{\n    if (this.state.loggedInUser === null) {\n      this._service.loggedin()\n        .then(theLoggedInUserFromTheServer => this.setState({ loggedInUser: theLoggedInUserFromTheServer.data }))\n        .catch(err => {\n          this.setState({ loggedInUser: false })\n          console.log({ err })\n      })\n    }\n  }\n\n\nrender (){\n  this.fetchUser()\n\n  return(\n    <>\n    <Navbar loggedInUser={this.state.loggedInUser} setUser={this.setTheUser}/>\n    <Switch>\n    <Route exact path='/' component={Index}/>\n    <Route path='/login' render={match => <Login setUser={this.setTheUser}{...match}/>}/>\n    <Route path='/signup' render={match => <Signup setUser={this.setTheUser}{...match}/>}/>\n    <Route path='/Kitchen' render={()=> <Kitchen loggedInUser={this.state.loggedInUser} socket={this.socket}/>}/>\n    <Route exact path='/menu' component={Menu}/>\n    <Route path=\"/menu/detail/:id\" component={DishDetail} />\n    <Route exact path=\"/order\" render={props=> <Review loggedInUser={this.state.loggedInUser} socket={this.socket}{...props}/>}/>\n    <Route path='/menu/:category' render={props=> <Category loggedInUser={this.state.loggedInUser}{...props}/>}/>\n    <Route path=\"/order/preparing\" render={props=> <Preparing loggedInUser={this.state.loggedInUser} socket={this.socket}{...props}/>}/>\n    <Route path='/edit/:id' component={Edit}/> \n    </Switch>\n    </>\n  )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css';\n\n\nReactDOM.render(\n<Router>\n<App />\n</Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/final_5dfbcb1a7842900014029781_691688.d9616e4e.mp4\";"],"sourceRoot":""}